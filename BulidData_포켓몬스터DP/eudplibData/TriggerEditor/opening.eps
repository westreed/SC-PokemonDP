import Player.playerSetting as pps;
import Player.playerUnit as ppu;
import Pokemon.pokemonInfo as ppi;
import Pokemon.myPokemon as pmp;
import Pokemon.calculateMethod as pcm;
import Variables.mainSentence as vms;
import Variables.locationInfo as vli;
import Variables.npcInfo as vni;
import SCA.scaSystem as scs;
import SCA.scaReverse as scr;
import scaVariable as sv;


const s = StringBuffer(1024);
const t = StringBuffer(1024);
const opStep    = PVariable();
const opDelay   = PVariable();
const opSpeech  = [
    Db("\x13흐음!!\n\x13잘 왔다!"),
    Db("\x13포켓몬스터의 세계에 온 것을\n\x13환영한다!"),
    Db("\x13내 이름은 마박사!\n"),
    Db("\x13모두가\n\x13포켓몬 박사님이라 부르고 있단다"),
    Db("\x13이 세계에는\n\x13포켓몬스터"),
    Db("\x13줄여서 '포켓몬'이라 불리는\n\x13신기한 생명체가 도처에 살고 있다!"),
    Db("\x13우리 인간은\n\x13포켓몬과 사이좋게 살고 있지"),
    Db("\x13함께 놀기도 하고\n\x13힘을 합쳐 일을 하기도 하고"),
    Db("\x13그리고 포켓몬끼리 싸우게 하여\n\x13유대감을 돈독히 다지기도 하고..."),
    Db("\x13나는 그런 포켓몬들을\n\x13자세히 알기 위해"),
    Db("\x13연구하고 있는 것이란다!\n"),
    Db("\x13흐음...\n\x13광휘라고 하는가!"),
    Db("\x13광휘!!\n\x13이제부터 너만의 이야기가 시작된다!"),
    Db("\x13거기서 너는\n\x13여러 포켓몬이나"),
    Db("\x13많은 사람들과 만나\n\x13무언가를 발견하게 되겠지!"),
    Db("\x13그럼\n\x13포켓몬스터의 세계로!")
];

function dataSlotAction(cp, index);
function openingStep(cp){
    if(opStep[cp] == 0){
        if(opDelay[cp] < 96){opDelay[cp] += 1;}
        else{opDelay[cp] = 0; opStep[cp] = 1;}
    }
    else if(opStep[cp] == 1){
        s.insert(0, "\x13\x1C┌─────────────────────┐\n");
        s.append("\n");
        s.append("\x13\x04ⓒ 2008 Pokemon\n");
        s.append("\x13\x04ⓒ 1995-2008 Nintendo\n");
        s.append("\x13\x04ⓒ 1995-2008 Creatures Inc.\n");
        s.append("\x13\x04ⓒ 1995-2008 GAME FREAK Inc.\n");
        s.append("\n");
        s.append("\x13\x1C└─────────────────────┘");
        s.DisplayAt(0);
        if(opDelay[cp] < 270){opDelay[cp] += 1;}
        else{opDelay[cp] = 0; opStep[cp] = 2;}
    }
    else if(opStep[cp] == 2){
        s.insert(0, "\x13\x1C┌─────────────────────┐\n");
        s.append("\n");
        s.append("\n");
        s.append("\x13\x17GAME FREAK\n");
        s.append("\x13\x17·PRESENTS·\n");
        s.append("\n");
        s.append("\n");
        s.append("\x13\x1C└─────────────────────┘");
        s.DisplayAt(0);
        if(opDelay[cp] < 270){opDelay[cp] += 1;}
        else{opDelay[cp] = 0; opStep[cp] = 4;}
    }
    else if(opStep[cp] == 4){
        s.insert(0, "\x13\x1C┌─────────────────────┐\n");
        s.append("\x13\x04포켓몬스터 DP\n");
        s.append("\x13\x1EPokemon Diamond·Pearl\n");
        s.append("\n");
        s.append("\n");
        s.append("\x13\x04ⓒ 2008 GAME FREAK Inc.\n");
        s.append("\n");
        s.append("\x13\x1C└─────────────────────┘");
        s.DisplayAt(0);
        if(opDelay[cp] < 36){
            if(scs.globalStat == 0){s.printfAt(4, "\x13\x02SCA런처를 먼저 실행하세요.");}
            else if(scs.globalStat != 72){s.printfAt(4, "\x13\x02맵정보를 불러오고 있습니다...");}
            else{s.printfAt(4, "\x13\x02F키를 누르면 게임을 시작합니다.");}
        }
        //else{s.printfAt(6, "\x13");}
        if(opDelay[cp] < 72){opDelay[cp] += 1;}
        else{opDelay[cp] = 0;}
        if(scs.globalStat == 72 && Deaths(cp, Exactly, 16, "A Key")){
            PlayWAV("staredit\\wav\\se_gui_choose.wav");
            s.printfAt(0, "\n\n\n\n\n\n\n");
            opDelay[cp] = 0; opStep[cp] = 5;
            pps.guiUpdate[cp] = 1;
        }
    }
    //슬롯선택
    else if(opStep[cp] == 5){
        const index = pps.selectMenu[cp];
        if(pps.guiUpdate[cp]){
            pps.guiUpdate[cp] = 0;
            t.insert(0, "\x13\x1C┌─────────────────────┐\n");
            t.appendf("\x13\x04포켓몬스터 DP\n");
            t.appendf("\x13\x1EPokemon Diamond·Pearl\n");
            t.appendf("\n");
            t.appendf("\x13{:s}1번 슬롯 선택\n",pps.selectIcon1[index]);
            t.appendf("\x13{:s}2번 슬롯 선택\n",pps.selectIcon2[index]);
            t.appendf("\x13{:s}3번 슬롯 선택\n",pps.selectIcon3[index]);
            t.appendf("\x13\x1C└─────────────────────┘");
        }
        t.DisplayAt(0);
        dataSlotAction(cp, index);
        eprintf("{:s}",vms.stickText);
    }
    else if(opStep[cp] == 6){
        t.insert(0, "\x13\x1C┌─────────────────────┐\n");
        t.appendf("\x13\x04포켓몬스터 DP\n");
        t.appendf("\x13\x1EPokemon Diamond·Pearl\n");
        t.appendf("\n");
        if(scs.someoneLoad == 0 || scs.someoneLoad == cp+1){
            t.appendf("\x13\x1E{}번 슬롯\x04을 불러오고 있습니다.\n",scs.userSlot[cp]+1);
            t.appendf("\x13\x04잠시만 기다려주세요.\n");
            t.appendf("\n");
        }
        else{
            t.appendf("\x13\x1E{}번 슬롯\x04을 불러오고 있습니다.\n",scs.userSlot[cp]+1);
            t.appendf("\x13{0:c}{0:n}\x04님의 데이터를 먼저 불러오고 있습니다.\n", scs.someoneLoad-1);
            t.appendf("\n");
        }
        t.appendf("\x13\x1C└─────────────────────┘");
        t.DisplayAt(0);
        if(scs.playerLoad[cp] > 1){
            //데이터가 있는 경우, 시작할지 다른슬롯을 선택할지 물어보기
            if(scs.playerLoad[cp] == 2){opStep[cp] = 8; pps.guiUpdate[cp] = 1;}
            //해당 슬롯에 데이터가 없는 경우 해당슬롯으로 새롭게 게임을 시작할지 물어보기
            else{opStep[cp] = 7; scs.playerLoad[cp] = 0; pps.guiUpdate[cp] = 1;}
        }
    }
    else if(opStep[cp] == 7){
        if(pps.guiUpdate[cp]){
            pps.guiUpdate[cp] = 0;
            t.insert(0, "\x13\x1C┌─────────────────────┐\n");
            t.appendf("\x13\x1F《 \x04{}번 슬롯 \x1F》\n",scs.userSlot[cp]+1);
            t.appendf("\n");
            t.appendf("\x13\x1E해당 슬롯은 비어있습니다.\n");
            t.appendf("\n");
            t.appendf("\x13\x04새로하기 (D)\n");
            t.appendf("\x13\x04뒤로가기 (A)\n");
            t.appendf("\x13\x1C└─────────────────────┘");
        }
        t.DisplayAt(0);
        if(Deaths(cp, Exactly, 8, "A Stick")){
            pps.selectMenu[cp] = 0; opStep[cp] = 20;
            PlayWAV("staredit\\wav\\se_gui_misc6.wav");
            pps.settingMusic[cp] = 2; vms.removeText();
            pps.guiUpdate[cp] = 1;
        }
        if(Deaths(cp, Exactly, 4, "A Stick")){
            opStep[cp] = 5; pps.guiUpdate[cp] = 1;
            PlayWAV("staredit\\wav\\se_gui_misc5.wav");
        }
    }
    else if(opStep[cp] == 8){
        if(pps.guiUpdate[cp]){
            pps.guiUpdate[cp] = 0;
            const cpPk = cp*pmp.userPokemonNum;
            t.insert(0, "\x13\x1C┌─────────────────────┐\n");
            t.appendf("\x13\x1F《 \x04{}번 슬롯 \x1F》\n",scs.userSlot[cp]+1);
            t.appendf("\x13\n\x13");
            for(var i=0; i<6; i++){
                const scaPokemonIndex, scaPokemonLevel, scaPokemonItem, scaPokemonState = pcm.divideStats(sv.scaPokemonIL[cpPk+i]);
                if(i == 3){t.appendf("\n\x13");}
                if(i != 0 && i != 3){t.appendf("\x1F│");}
                if(scaPokemonIndex){
                    const pk = ppi.Pokemon1.cast(ppi.pokemonList[scaPokemonIndex-1]);
                    t.appendf("\x04Lv.{} {:s}",scaPokemonLevel,pk.name);
                }
                else{t.appendf("\x1ELv.0 없음");}
            }
            t.appendf("\n\x13\x04이어하기 (D)\n");
            t.appendf("\x13\x04뒤로가기 (A)\n");
            t.appendf("\x13\x1C└─────────────────────┘");
        }
        t.DisplayAt(0);
        eprintf("\x04데이터를 삭제하고 새롭게 시작하려면, 채팅으로 \"\x1E!새롭게시작하기\x04\"를 입력하세요.");
        if(Deaths(cp, Exactly, 8, "A Stick")){
            pps.selectMenu[cp] = 0; opStep[cp] = 9;
            PlayWAV("staredit\\wav\\se_gui_misc6.wav");
            vms.removeText(); pps.guiUpdate[cp] = 1;
        }
        if(Deaths(cp, Exactly, 4, "A Stick")){
            opStep[cp] = 5; pps.guiUpdate[cp] = 1;
            scs.playerLoad[cp] = 0;
            PlayWAV("staredit\\wav\\se_gui_misc5.wav");
        }
        if(Deaths(cp, Exactly, 2, "A Chat")){
            scs.playerLoad[cp] = 0;
            pps.selectMenu[cp] = 0; opStep[cp] = 20;
            PlayWAV("staredit\\wav\\se_gui_misc6.wav");
            pps.settingMusic[cp] = 2; vms.removeText();
            pps.guiUpdate[cp] = 1;
        }
    }
    //로드된 캐릭터 생성하기
    else if(opStep[cp] == 9){
        pps.userSetLight[cp] = 31;
        scr.sca2map(cp); //sca데이터를 유즈맵데이터로 옮기기
        ppu.createPlayer(cp);
        vms.removeText();
        if(IsUserCP()){SetVariables(vli.locationText,1);}
        opStep[cp] = 25;
    }
    //오프닝
    else if(opStep[cp] == 20){
        s.insertf(0, "\x13{:s}\n",vni.npcName[3]);
        s.appendf("\x13{:s}\n", vms.sph1);
        s.appendf("\n\n", vms.sph1);
        s.appendf("\x13{:s}", vms.sph2);
        s.DisplayAt(0);
        const tecolor = 4, 2, 0x1E, 5, 0;
        t.fadeIn(ptr2s(opSpeech[vms.sphIndex[cp]]), color=tecolor, wait=1, line=2, tag=py_str("op"));
        if(Deaths(cp, Exactly, 16, "A Key")){
            if(vms.sphIndex[cp] < opSpeech._arrlen-1){
                TextFX_SetTimer("op", SetTo, 0); vms.sphIndex[cp]++;
                PlayWAV("staredit\\wav\\GUI sel cursor.wav");
            } else{
                opStep[cp] = 25;
                vms.sphIndex[cp] = 0;
                pps.settingMusic[cp] = 3;
                pps.mainStory[cp] = 1;
            }
        }
    }
}

function dataSlotAction(cp, index){
    if(Deaths(cp, Exactly, 1, "A Stick")){
        if(index == 0){pps.selectMenu[cp] = 2;}
        else{pps.selectMenu[cp] -= 1;}
        PlayWAV("staredit\\wav\\GUI sel cursor.wav");
        pps.guiUpdate[cp] = 1;
    }
    if(Deaths(cp, Exactly, 2, "A Stick")){
        if(index == 2){pps.selectMenu[cp] = 0;}
        else{pps.selectMenu[cp] += 1;}
        PlayWAV("staredit\\wav\\GUI sel cursor.wav");
        pps.guiUpdate[cp] = 1;
    }
    if(Deaths(cp, Exactly, 8, "A Stick")){
        scs.userSlot[cp] = index;
        scs.loadCode[cp] = 1;
        opStep[cp] = 6;
        PlayWAV("staredit\\wav\\se_gui_misc6.wav");
    }
}