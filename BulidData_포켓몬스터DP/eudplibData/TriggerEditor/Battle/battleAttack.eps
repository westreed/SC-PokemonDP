import functions as fc;
import Battle.battleStart as bbs;
import Pokemon.pokemonStatus as ppst;
import Player.playerSetting as pps;
import Variables.locationInfo as vli;

const battleAttackDelay     = PVariable();


function attackAI(cp){
    if(battleAttackDelay[cp] == 0){
        battleAttackDelay[cp] = 24;
        const battleLoc = bbs.battleLocation[cp];
        const pUnit = ppst.playerPokemonUnit[cp];
        const cUnit = ppst.playerPokemonUnit[cp+4];

        const cEPD = bbs.battleEPD[cp+4];
        if(!MemoryXEPD(cEPD+0x4D/4, Exactly, 0xA00, 0xFF00)){
            if(Bring(cp, Exactly, 1, pUnit, battleLoc)){
                MoveLocation(vli.tempMoveLoc, pUnit, cp, battleLoc);
                Order(cUnit, P5, battleLoc, Patrol, vli.tempMoveLoc);
            }
            else{
                MoveLocation(vli.tempMoveLoc, 37, P5, battleLoc); //상대 포켓몬
                Order(cUnit, P5, battleLoc, Move, vli.tempMoveLoc);
            }
        }
        if(pps.setAutoBattle[cp] == 0){
            const pEPD = bbs.battleEPD[cp];
            if(!MemoryXEPD(cEPD+0x4D/4, Exactly, 0xA00, 0xFF00)){
                if(Bring(P5, Exactly, 1, cUnit, battleLoc)){
                    MoveLocation(vli.tempMoveLoc, cUnit, P5, battleLoc);
                    Order(pUnit, cp, battleLoc, Attack, vli.tempMoveLoc);
                }
                else{
                    MoveLocation(vli.tempMoveLoc, 50, P5, battleLoc); //상대 포켓몬
                    Order(pUnit, cp, battleLoc, Move, vli.tempMoveLoc);
                }
            }
        }
    }
    else{battleAttackDelay[cp] -= 1;}
}