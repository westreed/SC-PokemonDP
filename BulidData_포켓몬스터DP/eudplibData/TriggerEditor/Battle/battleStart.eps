import functions as fc;
import Player.movementUnit as pmu;
import Player.playerSetting as pps;
import Variables.locationInfo as vli;
import Pokemon.pokemonInfo as ppi;
import Pokemon.weakRelation as pwr;
import Pokemon.calculateMethod as pcm;

const battleStep    = PVariable(); //0:배틀종료 1이상:배틀시작
const battleLoop    = PVariable();
const battleDelay   = PVariable(); //딜레이계산용
const battleType    = PVariable(); //0:야생, 1:트레이너, 2:라이벌, 3:체육관장, 4:갤럭시단, 5:갤럭시단간부, 6:갤럭시단보스
const battleName    = PVariable(); //배틀상대이름
const battlePokemon = EUDArray(4*6); //배틀상대포켓몬 [0] 255^0, 255^1, 255^2 / [1] 255^0, 255^1, 255^2
const battleMap     = [0,0,0,1,1,1,1]; //battleType별로 맵지정 0:battleLoc, 1:gymLoc


/*
5P 인페스트테란 : 내포켓몬 위치
6P 인페스트테란 : 트레이너 위치
5P 저글링 : 상대포켓몬 위치
6P 저글링 : 상대트레이너 위치
*/

function dividePokemon(value){
    var result1 = 0; var result2 = 0; var result3 = 0;
    while(value >= 255^2){value -= 255^2; result3 += 1;}
    while(value >= 255^1){value -= 255^1; result2 += 1;}
    result1 = value;
    return result1,result2,result3;
}

function battleSetting(cp, type, name, poke1, poke2){
    const cp6 = cp*6;
    battleType[cp] = type;
    battleName[cp] = name;
    battlePokemon[cp6+0],attlePokemon[cp6+1],attlePokemon[cp6+2] = dividePokemon(poke1);
    battlePokemon[cp6+3],attlePokemon[cp6+4],attlePokemon[cp6+5] = dividePokemon(poke2);
    battleStep[cp] = 1; //Battle Start
}

function battleSystem(cp){
    const step = battleStep[cp];
    //battleStep값이 1이상일 때 작동하기
    if(step){
        //전투 시작전 유저의 유닛움직임 멈추기
        if(step == 1){pmu.changeMoveState(cp, false);}
        //전투 시작전 화면 깜박이기
        else if(step == 2){
            if(battleDelay[cp] < 36){
                battleDelay[cp] += 1;
                if(battleDelay[cp] == 1){
                    fc.setLight(0);
                }
                else if(battleDelay[cp] == 19){
                    fc.setLight(31);
                }
            }
            else{
                battleDelay[cp] = 0;
                battleLoop[cp] += 1;
            }
            if(battleLoop[cp] == 4){
                battleLoop[cp] = 0;
                battleStep[cp] += 1;
            }
        }
        else if(step == 3){
            const type = battleType[cp];
            var battleMapLoc = 0;
            if(battleMap[type] == 0){battleMapLoc = vli.battleLoc+cp;}
            else{battleMapLoc = vli.gymLoc+cp;}
            MoveLocation(vli.tempMoveLoc, 50, P5, battleMapLoc); //내 포켓몬
            MoveLocation(vli.tempMoveLoc, 50, P6, battleMapLoc); //내 트레이너
            MoveUnit(1, pps.playerUnit, cp, 64, vli.tempMoveLoc);
            MoveLocation(vli.tempMoveLoc, 37, P5, battleMapLoc); //상대 포켓몬
            MoveLocation(vli.tempMoveLoc, 37, P6, battleMapLoc); //상대 트레이너
        }
    }
}